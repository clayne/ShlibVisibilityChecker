# TODO:
# * proper deploy (with dependencies, etc.)
# * more tests (70% coverage)
# * add Python coverage

name: CI
on:
  push:
    paths-ignore:
    - 'LICENSE.txt'
    - 'README.md'
  pull_request:
    paths-ignore:
    - 'LICENSE.txt'
    - 'README.md'
jobs:
  Baseline:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-latest]
        cxx: [g++, clang++]
    runs-on: ${{ matrix.os }}
    env:
      CXX: ${{ matrix.cxx }}
      LLVM_CONFIG: llvm-config
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: scripts/install-deps.sh
    - name: Run tests
      run: scripts/travis.sh
  Asan:
    runs-on: ubuntu-latest
    env:
      CXX: clang++
      LLVM_CONFIG: llvm-config
      ASAN: 1
      ASAN_OPTIONS: detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: scripts/install-deps.sh
    - name: Run tests
      run: scripts/travis.sh
  UBsan:
    runs-on: ubuntu-latest
    env:
      CXX: clang++
      LLVM_CONFIG: llvm-config
      UBSAN: 1
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: scripts/install-deps.sh
    - name: Run tests
      run: scripts/travis.sh
  Valgrind:
    runs-on: ubuntu-latest
    env:
      LLVM_CONFIG: llvm-config
      VALGRIND: 1
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: |
        scripts/install-deps.sh
        sudo apt-get install valgrind
    - name: Run tests
      run: scripts/travis.sh
  Coverity:
    needs: Baseline
    runs-on: ubuntu-latest
    environment: secrets
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: scripts/install-deps.sh
    - uses: vapier/coverity-scan-action@v0
      with:
        project: yugr%2FShlibVisibilityChecker
        token: ${{ secrets.COVERITY_SCAN_TOKEN }}
        email: ${{ secrets.EMAIL }}
  Coverage:
    needs: Baseline
    runs-on: ubuntu-latest
    environment: secrets
    env:
      COVERAGE: 1
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      PYTHON: 'coverage run -a'
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: |
        scripts/install-deps.sh
        sudo python3 -m pip install codecov
    - name: Run tests and upload coverage
      run: scripts/travis.sh
